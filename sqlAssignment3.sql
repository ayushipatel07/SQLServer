
---------QUESTION 1---------

CREATE VIEW SALES_INFOS
AS 
SELECT PP.PRODUCT_ID, PP.PRODUCT_NAME,SO.ORDER_ID, SO.CUSTOMER_ID ,OI.LIST_PRICE FROM PRODUCTION.PRODUCTS PP 
INNER JOIN SALES.ORDER_ITEMS OI
ON PP.PRODUCT_ID = OI.PRODUCT_ID 
INNER JOIN SALES.ORDERS SO
ON OI.ORDER_ID = SO.ORDER_ID

--------CALLING VIEW--------

SELECT * FROM SALES_INFOS

--------QUESTION 2---------

CREATE VIEW STAFF_SALE
AS
SELECT  SS.FIRST_NAME, SS.LAST_NAME, SUM(OI.QUANTITY * OI.LIST_PRICE) AS 'ORDER VALUE'
FROM SALES.ORDER_ITEMS  OI
INNER JOIN SALES.ORDERS SO
ON OI.ORDER_ID = SO.ORDER_ID
INNER JOIN SALES.STAFFS SS
ON SS.STAFF_ID = SO.STAFF_ID
GROUP BY SS.FIRST_NAME, SS.LAST_NAME

-----CALLING VIEW----------

SELECT * FROM STAFF_SALE

---------QUESTION 3----------

CREATE PROCEDURE UP_ADD_STORE
@STORE_COUNT INT OUTPUT,
@STORE_NAME VARCHAR(20),
@PHONE VARCHAR(20),
@EMAIL VARCHAR(20),
@STREET VARCHAR(50),
@CITY VARCHAR(20),
@STATE VARCHAR(20),
@ZIP_CODE NUMERIC(10)
AS
BEGIN
INSERT INTO SALES.STORES  (STORE_NAME,PHONE,EMAIL,STREET,CITY,STATE,ZIP_CODE)
VALUES (@STORE_NAME,@PHONE,@EMAIL,@STREET,@CITY,@STATE,@ZIP_CODE)
SELECT @STORE_COUNT = COUNT(*) FROM SALES.STORES
END

DECLARE @COUNT INT;
EXEC UP_ADD_STORE
@STORE_NAME= 'SANTA BIKES',
@PHONE = '9977880034',
@EMAIL = 'clarke@bike.shop',
@STREET = '1209, SANTA CRUZ',
@CITY = 'SANTA CRUZ',
@STATE = 'CA',
@ZIP_CODE = '12345',
@STORE_COUNT = @COUNT OUTPUT
 SELECT  @COUNT AS 'CATEGORY COUNT'

 ------CALLING STORED PROCEDURES-----

 SELECT * FROM SALES.STORES

 ------QUESTION 4-------------

 CREATE PROCEDURE USP_STORE_WISE_SALE
 AS
 BEGIN
 SELECT SS.STORE_ID, SS.STORE_NAME, SS.CITY, COUNT(ORDER_ID) AS 'ORDER COUNT'
 FROM SALES.STORES SS INNER JOIN SALES.ORDERS SO
 ON SS.STORE_ID = SO.STORE_ID
 GROUP BY SS.STORE_ID, SS.STORE_NAME, SS.CITY
 END;

 USP_STORE_WISE_SALE

 ----------QUESTION 5--------------

 CREATE FUNCTION SALES.UDF_SUM_QTY(
@CUSTOMER_ID INT,
@YEAR INT
)
RETURNS DECIMAL(10,2)
AS
BEGIN
DECLARE @ORDER_COUNT DECIMAL(10,2)
SELECT @ORDER_COUNT = SUM (QUANTITY * LIST_PRICE)
FROM SALES.ORDER_ITEMS OI INNER JOIN SALES.ORDERS SO
ON OI.ORDER_ID = SO.ORDER_ID
WHERE CUSTOMER_ID = @CUSTOMER_ID AND YEAR(ORDER_DATE) = @YEAR
RETURN @ORDER_COUNT
END

---------CALLING FUNCTION---------

SELECT SALES.UDF_SUM_QTY(279,2017) AS 'ORDER SUM'
SELECT * FROM SALES.CUSTOMERS